'''На вход алгоритма подаётся натуральное число N.
Алгоритм строит по нему новое число R следующим образом.
1))Строится двоичная запись числа N.
2)К этой записи дописываются справа ещё два разряда по следующему правилу:
а)складываются все цифры двоичной записи, и остаток от деления суммы на 2
 дописывается в конец числа (справа). Например, запись 11100 преобразуется
  в запись 111001;
б)над этой записью производятся те же действия— справа дописывается остаток
от деления суммы
 цифр на 2.
Полученная таким образом запись (в ней на два разряда больше, чем в записи
исходного числа N)
 является двоичной записью искомого числа R.
Укажите минимальное число R, которое превышает 43 и может являться результатом
работы алгоритма.
 В ответе это число запишите в десятичной системе.
 2.10 - 2 в десятичной системе'''

''' Если в числе было нечётное количесвто едениц, то в конце допишется 10
    Если в числе было чётное количесвто едениц 00
44.10 = 101100.2 - не может быть результатом работы алгоритма
45.10 = 101101.2 - не может быть результатом работы алгоритма
46.10 = 101110.2 - может
'''

#функция
def f(s): #
    summa = 0 #
    for i in range(len(s)): # цикл , столько раз , чему ровна длинна строки
        summa += int(s[i])
    return summa
for i in range (1, 100):
    '''перевод в двоичную систему'''
    s = bin(n)[2:]
    s = str(s)
    summa = f(s) # добовляем 0 или 1 в зависимости
    s = s + str(summa % 2) # от остатка от деления
    summa = f(s) # добовляем 0 или 1 в зависимости
    s = s + str(summa % 2) # от остатка от деления
    '''перевод в десятичную'''
    r = int(s, 2)
    if r > 43: # Если r > 43
        print(r) # Вывести на экран
        break # Остановитьь работу

i = 1 #
while True: # Повторяем пока условия истино
    n = i     #
    s = bin(n)[2:] # переводим в двоичную систему
    for j in range(2): # цикл 2 - е итерации
        s = s + str(s.count('1') % 2) # прибавляем 0 или 1 в зависимости от остатка
    n = int(s, 2) # переводим в 10-ую систему
    if n > 43: # если условие истинно
        print(n) #
        break #
    i += 1 #

'''Сколько едениц содержиться в двоичной записи значения выражения
4 ** 2020 + 2 ** 2017 - 15
'''
x = 4 ** 2020 + 2 ** 2017 - 15 # получаем сумму и сохраняем в x
s = '' #создаём строку
while x != 0:
    s += str(x % 2)
    x //= 2
s = s[:: -1]
print(s.count("1"))
#
count = 0 # хранить сумму 1 и 0
x = 4 ** 2020 + 2 ** 2017 - 15 # получаем сумму и сохраняем в x
while x != 0: #
    count = count + (x % 2) # прибавляем 0 или 1 в зависимости от отстатка от деления
    x //= 2
print(count)

#***
print(bin(4 ** 2020 + 2 ** 2017 - 15).count('1'))

#bin - это
n = int(input())
b = ''
while n > 0:
    b = b + str(n % 2)
    n = n // 2
b = b[:: -1]
print(b)
'''а вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
1/Строится двоичная запись числа N.
2. этой записи дописываются справа ещё два разряда по следующему правилу:
аскладываются все цифры двоичной записи числа N, и остаток от деления 
суммы на 2 дописывается в конец числа (справа).
 Например, запись 11100 преобразуется в запись 111001;
б)над этой записью производятся те же действия— справа 
дописывается остаток от деления суммы цифр на 2.
Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N)
является двоичной записью результирующего числа R.
Укажите такое наименьшее число N, для которого результат работы алгоритма больше числа 77. В 
ответе это число запишите в десятичной системе счисления.'''
